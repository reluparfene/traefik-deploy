version: '3.8'

services:
  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud-app
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=nextcloud-db
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NC_DB_PASSWORD:-changeme}
      - NEXTCLOUD_ADMIN_USER=${NC_ADMIN_USER:-admin}
      - NEXTCLOUD_ADMIN_PASSWORD=${NC_ADMIN_PASSWORD:-changeme}
      - NEXTCLOUD_TRUSTED_DOMAINS=cloud.${DOMAIN}
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=cloud.${DOMAIN}
    volumes:
      - nextcloud_data:/var/www/html
    networks:
      - app-frontend
      - db-backend
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=app-frontend"

      # HTTP Router
      - "traefik.http.routers.nextcloud.entrypoints=web"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud.middlewares=https-redirect@file"

      # HTTPS Router
      - "traefik.http.routers.nextcloud-secure.entrypoints=websecure"
      - "traefik.http.routers.nextcloud-secure.rule=Host(`cloud.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud-secure.tls=true"
      - "traefik.http.routers.nextcloud-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.nextcloud-secure.middlewares=nextcloud-chain@docker"

      # Middlewares
      - "traefik.http.middlewares.nextcloud-chain.chain.middlewares=secure-headers@file,nextcloud-dav@docker"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/ca(l|rd)dav"
      - "traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/"

      # Service
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"

  nextcloud-db:
    image: postgres:15-alpine
    container_name: nextcloud-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NC_DB_PASSWORD:-changeme}
    volumes:
      - nextcloud_db:/var/lib/postgresql/data
    networks:
      - db-backend

  nextcloud-redis:
    image: redis:7-alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    command: redis-server --requirepass ${NC_REDIS_PASSWORD:-changeme}
    networks:
      - db-backend

volumes:
  nextcloud_data:
  nextcloud_db:

networks:
  app-frontend:
    external: true
  db-backend:
    external: true