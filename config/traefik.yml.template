---
# ============================================
# Traefik Static Configuration Template
# ============================================

# API and Dashboard
api:
  dashboard: ${TRAEFIK_DASHBOARD_ENABLED}
  debug: false

# Entry Points
entryPoints:
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          priority: 1000

  websecure:
    address: :443
    http:
      tls:
        certResolver: le-dns
        domains:
          - main: "${DOMAIN}"
            sans:
              - "*.${DOMAIN}"

  # Metrics endpoint (uncomment to enable Prometheus metrics)
  # metrics:
  #   address: :8082

# Providers
providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
    network: traefik-frontend
    watch: true

  file:
    directory: /configurations
    watch: true

# Certificate Resolvers
certificatesResolvers:
  # Let's Encrypt with DNS Challenge (Primary and only resolver)
  le-dns:
    acme:
      email: ${ACME_EMAIL}
      storage: /acme.json
      keyType: EC384
      dnsChallenge:
        provider: cloudns
        # Use provider-specific DNS servers
        # ClouDNS servers are faster for ClouDNS-hosted domains
        resolvers:
          - "${DNS_RESOLVERS}"
        # Delay helps with DNS propagation issues
        delayBeforeCheck: ${DNS_CHECK_DELAY}

# Logging
# By default, logs go to stdout (docker logs)
# Uncomment filePath to save logs to file
log:
  level: ${TRAEFIK_LOG_LEVEL}
  format: ${TRAEFIK_LOG_FORMAT}
  # filePath: /traefik.log  # Uncomment to save logs to file

# Access Logs
# Uncomment this section to enable access logging
# Warning: Access logs can grow quickly in production
# Consider using log rotation or external log management
# accessLog:
#   format: json
#   filePath: /access.log
#   bufferingSize: 100
#   filters:
#     statusCodes:
#       - "400-599"  # Only log errors by default

# Ping (Health Check)
ping:
  entryPoint: traefik
  manualRouting: false

# Metrics (Optional - Recommended for Production)
# To enable Prometheus metrics:
# 1. Uncomment the metrics entrypoint above (lines 33-34)
# 2. Uncomment the section below
# 3. Configure Prometheus to scrape http://traefik:8082/metrics
# Note: Adds ~50MB RAM overhead. For development, use access logs instead.
# metrics:
#   prometheus:
#     entryPoint: metrics
#     addEntryPointsLabels: true
#     addRoutersLabels: true
#     addServicesLabels: true
#     buckets:
#       - 0.1
#       - 0.3
#       - 1.2
#       - 5.0

# Security
serversTransport:
  insecureSkipVerify: false

# Pilot (Optional Traefik Pilot)
pilot:
  dashboard: false
